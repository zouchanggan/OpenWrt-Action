name: Rockchip-OpenWrt

on:
#  schedule:
#    - cron: 5 6 * * 0
  workflow_dispatch:
  watch:
    types: started

jobs:
  build:
    runs-on: ubuntu-24.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Setup variables
      run: |
        sudo timedatectl set-timezone 'Asia/Shanghai'
        git config --global user.name 'actions'
        git config --global user.email 'action@github.com'
        
    - name: Show system
      run: |
        echo -e "\n\e[1;32mCPU:\e[0m"
        echo "$(grep 'model name' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}') ($(grep 'cpu MHz' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}')MHz) x $(grep processor /proc/cpuinfo  | wc -l)"
        echo -e "\n\e[1;32mMemory:\e[0m"
        free -h
        echo -e "\n\e[1;32mStorage:\e[0m"
        df -Th / /mnt
        echo -e "\n\e[1;32mSystem:\e[0m"
        lsb_release -a
        echo -e "\n\e[1;32mKernel:\e[0m"
        uname -a
        echo
        
    - name: Free disk space
      uses: oppen321/actions@free-disk

    - name: Checkout
      uses: actions/checkout@main

    - name: Build System Setup
      uses: oppen321/actions@openwrt-build-setup

    - name: Install LLVM
      uses: oppen321/actions@install-llvm
      
    - name: Prepare Mixedwrt
      run: |
        sudo chown -R runner:runner /home/runner/work/ZeroWrt-Action
        cp -r ./SCRIPTS/Rockchip/. ./SCRIPTS/
        cp -r ./SCRIPTS/. ./
        /bin/bash 01_get_ready.sh
        
    - name: Prepare Package
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        cp -r ../SCRIPTS/. ./
        /bin/bash 02_prepare_package.sh
        /bin/bash 03_custom_settings_rk.sh
#        /bin/bash 04_remove_upx.sh
        
    - name: QTMDFW4
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        cp -rf ../SCRIPTS/Rockchip/config.seed .config
        
#    - name: Convert Translation
#      working-directory: ${{ github.workspace }}/openwrt
#      run: |
#        /bin/bash 05_convert_translation.sh
        
#    - name: Add ACL
#      working-directory: ${{ github.workspace }}/openwrt
#      run: |
#        /bin/bash 06_create_acl_for_luci.sh -a
        
#    - name: Fix Permissions
#      working-directory: ${{ github.workspace }}/openwrt
#      run: |
#        sudo -E chmod -R 755 ./07_fix_permissions.sh
#        /bin/bash 07_fix_permissions.sh
        
    - name: Make Config
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        make defconfig
        
    - name: Get Architecture
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        TARGET_DEVICE_ARCH="$(grep "^CONFIG_TARGET_.*_.*=y$" ".config" | head -n 1 | sed 's/^CONFIG_TARGET_//g' | awk -F '_' '{print $1}')"
        echo "TARGET_DEVICE_ARCH=${TARGET_DEVICE_ARCH}" >>$GITHUB_ENV
        latest_release="$(curl -s https://github.com/immortalwrt/immortalwrt/tags | grep -Eo "v[0-9\.]+\-*r*c*[0-9]*.tar.gz" | sed -n '/[2-9][4-9]/p' | sed -n 1p | sed 's/.tar.gz//g' | sed 's/v//g')"
        echo "latest_release=${latest_release}" >>$GITHUB_ENV
        
    - name: Cache
      uses: HiGarfield/cachewrtbuild@main
      with:
        mixkey: ${{ env.TARGET_DEVICE_ARCH }}
        prefix: ${{ github.workspace }}/openwrt

    - name: Set Variables
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        cat vermagic
        COMMIT_AUTHOR=$(git show -s --date=short --format="作者: %an")
        echo "COMMIT_AUTHOR=$COMMIT_AUTHOR" >> $GITHUB_ENV
        COMMIT_DATE=$(git show -s --date=short --format="时间: %ci")
        echo "COMMIT_DATE=$COMMIT_DATE" >> $GITHUB_ENV
        COMMIT_MESSAGE=$(git show -s --date=short --format="内容: %s")
        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
        COMMIT_HASH=$(git show -s --date=short --format="hash: %H")
        echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV
        
    - name: Make Download
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        make download -j50
        
    - name: Compile Openwrt
      working-directory: ${{ github.workspace }}/openwrt
      id: compileopenwrt
      continue-on-error: true
      run: |
        make -j$(nproc)
        
    - name: If Error
      working-directory: ${{ github.workspace }}/openwrt
      if: steps.compileopenwrt.outcome == 'failure'
      run: |
        cat ./.config
        echo '================================================================'
        make -j1 V=s
        
    - name: Organize files
      id: organize
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        mv openwrt/bin/targets/rockchip/armv8/*sysupgrade.img* ./artifact/
        cd openwrt/bin/targets/rockchip/armv8
        echo "KERNEL=$(cat *.manifest | grep ^kernel | cut -d- -f2 | tr -d ' ')" >> $GITHUB_ENV
        
    - name: Create release
      id: create_release
      uses: ncipollo/release-action@main
      with:
        name: OpenWRT-${{ env.latest_release }}
        allowUpdates: true
        prerelease: false
        tag: ${{ env.latest_release }}
        commit: "24.10"
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ./artifact/*
        body: |
          **This is OpenWrt Firmware**
          ### 📒 固件信息
          - 💻 平台架构: rockchip-armv8、x86
          - ⚽ 固件源码: https://github.com/openwrt/openwrt
          - 💝 源码分支: ${{ env.latest_release }}
          - 🚀 内核版本: ${{ env.KERNEL }}
          - 🌐 默认地址: 10.0.0.1
          - 🔑 默认密码: password
          ### 🧊 固件版本
          - 固件编译前最后一次➦[主源码](https://github.com/openwrt/openwrt)更新记录
          - ${{ env.COMMIT_AUTHOR }}
          - ${{ env.COMMIT_DATE }}
          - ${{ env.COMMIT_MESSAGE }}
          - ${{ env.COMMIT_HASH }}
          
    - name: Print Disk Space After
      run: df -h
