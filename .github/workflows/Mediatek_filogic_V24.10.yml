name: Mediatek_filogic_V24.10

on:
  workflow_dispatch:
    inputs:
      device:
        description: 'Select the build device'
        required: true
        default: 'Mediatek_filogic_mt7981'
        type: choice
        options:
          - 'Mediatek_filogic_mt7981'
          - 'Mediatek_filogic_mt7986'
      ccache:
        description: 'Enable ccache (Use Cache to speed up next build)'
        type: boolean
        default: false
      lan_addr:
        description: 'Setting default LAN address'
        required: true
        default: '10.0.0.1'
        type: string

jobs:
  build:
    name: Build ${{ github.event.inputs.device }}
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      continue-on-error: true
      uses: actions/checkout@main
      with:
        path: ZeroWrt-Action

    - name: Setup variables
      run: |
        sudo timedatectl set-timezone 'Asia/Shanghai'
        git config --global user.name 'actions'
        git config --global user.email 'action@github.com'
        echo build_dir="/builder" >> "$GITHUB_ENV"

    - name: Show system
      run: |
        echo -e "\n\e[1;32mCPU:\e[0m"
        echo "$(grep 'model name' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}') ($(grep 'cpu MHz' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}')MHz) x $(grep processor /proc/cpuinfo  | wc -l)"
        echo -e "\n\e[1;32mMemory:\e[0m"
        free -h
        echo -e "\n\e[1;32mStorage:\e[0m"
        df -Th / /mnt
        echo -e "\n\e[1;32mSystem:\e[0m"
        lsb_release -a
        echo -e "\n\e[1;32mKernel:\e[0m"
        uname -a
        echo

    - name: Free disk space
      uses: oppen321/actions@free-disk
      with:
        build-mount-path: /builder

    - name: Build System Setup
      uses: oppen321/actions@openwrt-build-setup

    - name: Compile OpenWrt
      working-directory: /builder
      id: compile
      continue-on-error: true
      run: |
        export LAN=${{ github.event.inputs.lan_addr }}
        bash <(curl -sS http://127.0.0.1:8080/build.sh) ${{ github.event.inputs.device }}

    - name: Extensive logs after a failed compilation
      working-directory: /builder
      if: steps.compile.outcome == 'failure'
      run: |
        cd openwrt
        make V=s

    - name: Prepare Firmware Files
      working-directory: /builder
      run: |
        mkdir -p rom
        
    - name: Create release
      continue-on-error: true
      uses: ncipollo/release-action@v1
      with:
        name: ${{ github.event.inputs.device }}
        allowUpdates: true
        tag: ${{ github.event.inputs.device }}
        commit: master
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.build_dir }}/rom/*
